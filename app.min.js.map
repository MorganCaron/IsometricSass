{"version":3,"sources":["webpack://docs/./node_modules/nootstrap-ui/build/Nootstrap.min.js","webpack://docs/./node_modules/prismjs/prism.js","webpack://docs/webpack/bootstrap","webpack://docs/webpack/runtime/compat get default export","webpack://docs/webpack/runtime/define property getters","webpack://docs/webpack/runtime/global","webpack://docs/webpack/runtime/hasOwnProperty shorthand","webpack://docs/./src/ts/App.ts"],"names":["t","this","updateParallax","window","addEventListener","onWindowResize","bind","onWindowScroll","document","querySelectorAll","forEach","e","r","onTriggerClick","prototype","getBoundingClientRect","top","left","n","querySelector","setAttribute","i","hasAttribute","preventDefault","o","getAttribute","l","a","split","u","c","classList","add","remove","toggle","Prism","_self","lang","uniqueId","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","content","alias","Array","isArray","map","replace","Object","toString","call","slice","objId","obj","defineProperty","value","clone","deepClone","visited","id","key","hasOwnProperty","v","getLanguage","element","test","className","parentElement","match","toLowerCase","currentScript","Error","err","src","exec","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","contains","languages","extend","redef","insertBefore","inside","before","insert","root","grammar","ret","token","newToken","old","DFS","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","elements","apply","highlightElement","language","parent","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","text","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","node","next","tail","push","toArray","all","name","callbacks","length","matchedStr","matchPattern","pattern","pos","lookbehind","lastIndex","lookbehindLength","index","startNode","startPos","rematch","patterns","j","cause","patternObj","greedy","global","flags","RegExp","source","currentNode","reach","str","removeCount","from","to","p","k","matchStr","after","removeFrom","prev","removeRange","newNode","count","s","tag","classes","attributes","aliases","join","message","parse","close","script","highlightAutomaticallyCallback","readyState","defer","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","module","exports","g","markup","tagName","includedCdataInside","def","html","mathml","svg","xml","ssml","atom","rss","string","css","addInlined","clike","javascript","regex","js","Element","matches","msMatchesSelector","webkitMatchesSelector","EXTENSIONS","STATUS_ATTR","SELECTOR","pre","appendChild","createElement","extension","setLanguageClass","autoloader","loadLanguages","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","statusText","send","fileHighlight","logged","console","warn","arguments","trim","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","__esModule","d","definition","enumerable","get","globalThis","Function","prop"],"mappings":"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","file":"app.min.js","sourcesContent":["(()=>{\"use strict\";var t;t=function(){function t(){var t=this;this.updateParallax(),window.addEventListener(\"resize\",this.onWindowResize.bind(this),!1),window.addEventListener(\"scroll\",this.onWindowScroll.bind(this),!1),document.querySelectorAll(\"*[trigger-target]\").forEach((function(e){return e.addEventListener(\"click\",(function(r){return t.onTriggerClick(e,r)}),!1)}))}return t.prototype.updateParallax=function(){document.querySelectorAll(\".parallax\").forEach((function(t){var e=t.getBoundingClientRect().top,r=t.getBoundingClientRect().left,n=t.querySelector(\".parallax-background\");null==n||n.setAttribute(\"style\",\"left: \"+-r+\"px; top: \"+-e/2+\"px;\")}))},t.prototype.onWindowResize=function(){this.updateParallax()},t.prototype.onWindowScroll=function(){this.updateParallax()},t.prototype.onTriggerClick=function(t,e){var r,n,i;if(t.hasAttribute(\"preventDefault\")&&e.preventDefault(),t.hasAttribute(\"trigger-target\")){var o=t.getAttribute(\"trigger-target\"),l=document.querySelectorAll(o),a=null===(r=t.getAttribute(\"add-class\"))||void 0===r?void 0:r.split(\" \"),u=null===(n=t.getAttribute(\"remove-class\"))||void 0===n?void 0:n.split(\" \"),c=null===(i=t.getAttribute(\"toggle-class\"))||void 0===i?void 0:i.split(\" \");l.forEach((function(t){a&&a.forEach((function(e){return t.classList.add(e)})),u&&u.forEach((function(e){return t.classList.remove(e)})),c&&c.forEach((function(e){return t.classList.toggle(e)}))}))}},t}(),window.addEventListener(\"load\",(function(){new t}),!1)})();\n//# sourceMappingURL=Nootstrap.min.js.map","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\n\nvar _ = {\n\t/**\n\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t * additional languages or plugins yourself.\n\t *\n\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t *\n\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t * empty Prism object into the global scope before loading the Prism script like this:\n\t *\n\t * ```js\n\t * window.Prism = window.Prism || {};\n\t * Prism.manual = true;\n\t * // add a new <script> to load Prism's script\n\t * ```\n\t *\n\t * @default false\n\t * @type {boolean}\n\t * @memberof Prism\n\t * @public\n\t */\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t/**\n\t * A namespace for utility methods.\n\t *\n\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t * change or disappear at any time.\n\t *\n\t * @namespace\n\t * @memberof Prism\n\t */\n\tutil: {\n\t\tencode: function encode(tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\treturn tokens.map(encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the name of the type of the given value.\n\t\t *\n\t\t * @param {any} o\n\t\t * @returns {string}\n\t\t * @example\n\t\t * type(null)      === 'Null'\n\t\t * type(undefined) === 'Undefined'\n\t\t * type(123)       === 'Number'\n\t\t * type('foo')     === 'String'\n\t\t * type(true)      === 'Boolean'\n\t\t * type([1, 2])    === 'Array'\n\t\t * type({})        === 'Object'\n\t\t * type(String)    === 'Function'\n\t\t * type(/abc+/)    === 'RegExp'\n\t\t */\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t},\n\n\t\t/**\n\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t *\n\t\t * @param {Object} obj\n\t\t * @returns {number}\n\t\t */\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t/**\n\t\t * Creates a deep clone of the given object.\n\t\t *\n\t\t * The main intended use of this function is to clone language definitions.\n\t\t *\n\t\t * @param {T} o\n\t\t * @param {Record<number, any>} [visited]\n\t\t * @returns {T}\n\t\t * @template T\n\t\t */\n\t\tclone: function deepClone(o, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar clone, id;\n\t\t\tswitch (_.util.type(o)) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = [];\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn o;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t *\n\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @returns {string}\n\t\t */\n\t\tgetLanguage: function (element) {\n\t\t\twhile (element && !lang.test(element.className)) {\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\tif (element) {\n\t\t\t\treturn (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n\t\t\t}\n\t\t\treturn 'none';\n\t\t},\n\n\t\t/**\n\t\t * Returns the script element that is currently executing.\n\t\t *\n\t\t * This does __not__ work for line script element.\n\t\t *\n\t\t * @returns {HTMLScriptElement | null}\n\t\t */\n\t\tcurrentScript: function () {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t}\n\n\t\t\t// IE11 workaround\n\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t// this will not work for inline scripts\n\n\t\t\ttry {\n\t\t\t\tthrow new Error();\n\t\t\t} catch (err) {\n\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t// A stack will look like this:\n\t\t\t\t//\n\t\t\t\t// Error\n\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\tif (src) {\n\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns whether a given class is active for `element`.\n\t\t *\n\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t * given class is just the given class with a `no-` prefix.\n\t\t *\n\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t *\n\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t * version of it, the class is considered active.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @param {string} className\n\t\t * @param {boolean} [defaultActivation=false]\n\t\t * @returns {boolean}\n\t\t */\n\t\tisActive: function (element, className, defaultActivation) {\n\t\t\tvar no = 'no-' + className;\n\n\t\t\twhile (element) {\n\t\t\t\tvar classList = element.classList;\n\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\treturn !!defaultActivation;\n\t\t}\n\t},\n\n\t/**\n\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t *\n\t * @namespace\n\t * @memberof Prism\n\t * @public\n\t */\n\tlanguages: {\n\t\t/**\n\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t *\n\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t * will be overwritten at its original position.\n\t\t *\n\t\t * ## Best practices\n\t\t *\n\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t *\n\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t *\n\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t * @param {Grammar} redef The new tokens to append.\n\t\t * @returns {Grammar} The new language created.\n\t\t * @public\n\t\t * @example\n\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t *     // at its original position\n\t\t *     'comment': { ... },\n\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t * });\n\t\t */\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t *\n\t\t * ## Usage\n\t\t *\n\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t * this:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.markup.style = {\n\t\t *     // token\n\t\t * };\n\t\t * ```\n\t\t *\n\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t *     'style': {\n\t\t *         // token\n\t\t *     }\n\t\t * });\n\t\t * ```\n\t\t *\n\t\t * ## Special cases\n\t\t *\n\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t * will be ignored.\n\t\t *\n\t\t * This behavior can be used to insert tokens after `before`:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t *     'comment': Prism.languages.markup.comment,\n\t\t *     // tokens after 'comment'\n\t\t * });\n\t\t * ```\n\t\t *\n\t\t * ## Limitations\n\t\t *\n\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t *\n\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t *\n\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t *\n\t\t * ```js\n\t\t * var oldMarkup = Prism.languages.markup;\n\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t *\n\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t * ```\n\t\t *\n\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t * object to be modified.\n\t\t * @param {string} before The key to insert before.\n\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t * object to be modified.\n\t\t *\n\t\t * Defaults to `Prism.languages`.\n\t\t * @returns {Grammar} The new grammar object.\n\t\t * @public\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\tvar grammar = root[inside];\n\t\t\t/** @type {Grammar} */\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar old = root[inside];\n\t\t\troot[inside] = ret;\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar objId = _.util.objId;\n\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tvar property = o[i],\n\t\t\t\t\t    propertyType = _.util.type(property);\n\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tplugins: {},\n\n\t/**\n\t * This is the most high-level function in Prism’s API.\n\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t * each one of them.\n\t *\n\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t *\n\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\t/**\n\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t * {@link Prism.highlightElement} on each one of them.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-highlightall`\n\t * 2. `before-all-elements-highlight`\n\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t *\n\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tcontainer: container,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run('before-highlightall', env);\n\n\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\tfor (var i = 0, element; element = env.elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\t/**\n\t * Highlights the code inside a single element.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-sanity-check`\n\t * 2. `before-highlight`\n\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t * 4. `before-insert`\n\t * 5. `after-highlight`\n\t * 6. `complete`\n\t *\n\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t * the element's language.\n\t *\n\t * @param {Element} element The element containing the code.\n\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t *\n\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t * asynchronous highlighting to work. You can build your own bundle on the\n\t * [Download page](https://prismjs.com/download.html).\n\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language = _.util.getLanguage(element);\n\t\tvar grammar = _.languages[language];\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t// Set language on the parent, for styling\n\t\tvar parent = element.parentElement;\n\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t}\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code) {\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (!env.grammar) {\n\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\treturn;\n\t\t}\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t}\n\t},\n\n\t/**\n\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t * and the language definitions to use, and returns a string with the HTML produced.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-tokenize`\n\t * 2. `after-tokenize`\n\t * 3. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string} text A string with the code to be highlighted.\n\t * @param {Grammar} grammar An object containing the tokens to use.\n\t *\n\t * Usually a language definition like `Prism.languages.markup`.\n\t * @param {string} language The name of the language definition passed to `grammar`.\n\t * @returns {string} The highlighted HTML.\n\t * @memberof Prism\n\t * @public\n\t * @example\n\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t */\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\t/**\n\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t * and the language definitions to use, and returns an array with the tokenized code.\n\t *\n\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t *\n\t * This method could be useful in other contexts as well, as a very crude parser.\n\t *\n\t * @param {string} text A string with the code to be highlighted.\n\t * @param {Grammar} grammar An object containing the tokens to use.\n\t *\n\t * Usually a language definition like `Prism.languages.markup`.\n\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t * @memberof Prism\n\t * @public\n\t * @example\n\t * let code = `var foo = 0;`;\n\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t * tokens.forEach(token => {\n\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t *         console.log(`Found numeric literal: ${token.content}`);\n\t *     }\n\t * });\n\t */\n\ttokenize: function(text, grammar) {\n\t\tvar rest = grammar.rest;\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\tvar tokenList = new LinkedList();\n\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\treturn toArray(tokenList);\n\t},\n\n\t/**\n\t * @namespace\n\t * @memberof Prism\n\t * @public\n\t */\n\thooks: {\n\t\tall: {},\n\n\t\t/**\n\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t *\n\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t *\n\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t *\n\t\t * @param {string} name The name of the hook.\n\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t * @public\n\t\t */\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\t/**\n\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t *\n\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t *\n\t\t * @param {string} name The name of the hook.\n\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t * @public\n\t\t */\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t},\n\n\tToken: Token\n};\n_self.Prism = _;\n\n\n// Typescript note:\n// The following can be used to import the Token type in JSDoc:\n//\n//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n/**\n * Creates a new token.\n *\n * @param {string} type See {@link Token#type type}\n * @param {string | TokenStream} content See {@link Token#content content}\n * @param {string|string[]} [alias] The alias(es) of the token.\n * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n * @class\n * @global\n * @public\n */\nfunction Token(type, content, alias, matchedStr) {\n\t/**\n\t * The type of the token.\n\t *\n\t * This is usually the key of a pattern in a {@link Grammar}.\n\t *\n\t * @type {string}\n\t * @see GrammarToken\n\t * @public\n\t */\n\tthis.type = type;\n\t/**\n\t * The strings or tokens contained by this token.\n\t *\n\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t *\n\t * @type {string | TokenStream}\n\t * @public\n\t */\n\tthis.content = content;\n\t/**\n\t * The alias(es) of the token.\n\t *\n\t * @type {string|string[]}\n\t * @see GrammarToken\n\t * @public\n\t */\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || '').length | 0;\n}\n\n/**\n * A token stream is an array of strings and {@link Token Token} objects.\n *\n * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n * them.\n *\n * 1. No adjacent strings.\n * 2. No empty strings.\n *\n *    The only exception here is the token stream that only contains the empty string and nothing else.\n *\n * @typedef {Array<string | Token>} TokenStream\n * @global\n * @public\n */\n\n/**\n * Converts the given token or token stream to an HTML representation.\n *\n * The following hooks will be run:\n * 1. `wrap`: On each {@link Token}.\n *\n * @param {string | Token | TokenStream} o The token or token stream to be converted.\n * @param {string} language The name of current language.\n * @returns {string} The HTML representation of the token or token stream.\n * @memberof Token\n * @static\n */\nToken.stringify = function stringify(o, language) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\tif (Array.isArray(o)) {\n\t\tvar s = '';\n\t\to.forEach(function (e) {\n\t\t\ts += stringify(e, language);\n\t\t});\n\t\treturn s;\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: stringify(o.content, language),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language\n\t};\n\n\tvar aliases = o.alias;\n\tif (aliases) {\n\t\tif (Array.isArray(aliases)) {\n\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t} else {\n\t\t\tenv.classes.push(aliases);\n\t\t}\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = '';\n\tfor (var name in env.attributes) {\n\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n};\n\n/**\n * @param {RegExp} pattern\n * @param {number} pos\n * @param {string} text\n * @param {boolean} lookbehind\n * @returns {RegExpExecArray | null}\n */\nfunction matchPattern(pattern, pos, text, lookbehind) {\n\tpattern.lastIndex = pos;\n\tvar match = pattern.exec(text);\n\tif (match && lookbehind && match[1]) {\n\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\tvar lookbehindLength = match[1].length;\n\t\tmatch.index += lookbehindLength;\n\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t}\n\treturn match;\n}\n\n/**\n * @param {string} text\n * @param {LinkedList<string | Token>} tokenList\n * @param {any} grammar\n * @param {LinkedListNode<string | Token>} startNode\n * @param {number} startPos\n * @param {RematchOptions} [rematch]\n * @returns {void}\n * @private\n *\n * @typedef RematchOptions\n * @property {string} cause\n * @property {number} reach\n */\nfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\tfor (var token in grammar) {\n\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar patterns = grammar[token];\n\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar patternObj = patterns[j],\n\t\t\t\tinside = patternObj.inside,\n\t\t\t\tlookbehind = !!patternObj.lookbehind,\n\t\t\t\tgreedy = !!patternObj.greedy,\n\t\t\t\talias = patternObj.alias;\n\n\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t}\n\n\t\t\t/** @type {RegExp} */\n\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t) {\n\n\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\tvar match;\n\n\t\t\t\tif (greedy) {\n\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t}\n\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\tpos = p;\n\n\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\tfor (\n\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\tk = k.next\n\t\t\t\t\t) {\n\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t}\n\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t// replace with the new match\n\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t} else {\n\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar from = match.index,\n\t\t\t\t\tmatchStr = match[0],\n\t\t\t\t\tbefore = str.slice(0, from),\n\t\t\t\t\tafter = str.slice(from + matchStr.length);\n\n\t\t\t\tvar reach = pos + str.length;\n\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\trematch.reach = reach;\n\t\t\t\t}\n\n\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\tif (before) {\n\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\tpos += before.length;\n\t\t\t\t}\n\n\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\tif (after) {\n\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t}\n\n\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t// this can only happen if the current pattern is greedy\n\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, {\n\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\treach: reach\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @typedef LinkedListNode\n * @property {T} value\n * @property {LinkedListNode<T> | null} prev The previous node.\n * @property {LinkedListNode<T> | null} next The next node.\n * @template T\n * @private\n */\n\n/**\n * @template T\n * @private\n */\nfunction LinkedList() {\n\t/** @type {LinkedListNode<T>} */\n\tvar head = { value: null, prev: null, next: null };\n\t/** @type {LinkedListNode<T>} */\n\tvar tail = { value: null, prev: head, next: null };\n\thead.next = tail;\n\n\t/** @type {LinkedListNode<T>} */\n\tthis.head = head;\n\t/** @type {LinkedListNode<T>} */\n\tthis.tail = tail;\n\tthis.length = 0;\n}\n\n/**\n * Adds a new node with the given value to the list.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {T} value\n * @returns {LinkedListNode<T>} The added node.\n * @template T\n */\nfunction addAfter(list, node, value) {\n\t// assumes that node != list.tail && values.length >= 0\n\tvar next = node.next;\n\n\tvar newNode = { value: value, prev: node, next: next };\n\tnode.next = newNode;\n\tnext.prev = newNode;\n\tlist.length++;\n\n\treturn newNode;\n}\n/**\n * Removes `count` nodes after the given node. The given node will not be removed.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {number} count\n * @template T\n */\nfunction removeRange(list, node, count) {\n\tvar next = node.next;\n\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\tnext = next.next;\n\t}\n\tnode.next = next;\n\tnext.prev = node;\n\tlist.length -= i;\n}\n/**\n * @param {LinkedList<T>} list\n * @returns {T[]}\n * @template T\n */\nfunction toArray(list) {\n\tvar array = [];\n\tvar node = list.head.next;\n\twhile (node !== list.tail) {\n\t\tarray.push(node.value);\n\t\tnode = node.next;\n\t}\n\treturn array;\n}\n\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _;\n}\n\n// Get current script and highlight\nvar script = _.util.currentScript();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (script.hasAttribute('data-manual')) {\n\t\t_.manual = true;\n\t}\n}\n\nfunction highlightAutomaticallyCallback() {\n\tif (!_.manual) {\n\t\t_.highlightAll();\n\t}\n}\n\nif (!_.manual) {\n\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t// See https://github.com/PrismJS/prism/issues/2102\n\tvar readyState = document.readyState;\n\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t} else {\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t}\n\t}\n}\n\nreturn _;\n\n})(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n*/\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n*/\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': RegExp('[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': /(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t'important': /!important\\b/i,\n\t\t'function': /[-a-z0-9]+(?=\\()/i,\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\n\t\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t\t'style-attr': {\n\t\t\t\tpattern: /(^|[\"'\\s])style\\s*=\\s*(?:\"[^\"]*\"|'[^']*')/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'style': {\n\t\t\t\t\t\t\t\tpattern: /([\"'])[\\s\\S]+(?=[\"']$)/,\n\t\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\t\talias: 'language-css',\n\t\t\t\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'attr-name': /^style/i\n\t\t\t\t}\n\t\t\t}\n\t\t}, markup.tag);\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:prototype|constructor))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\\s*[\\[$\\w\\xA0-\\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-flags': /[a-z]+$/,\n\t\t\t'regex-delimiter': /^\\/|\\/$/\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document) {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar Prism = window.Prism;\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\n\t/**\n\t * Sets the Prism `language-xxxx` or `lang-xxxx` class to the given language.\n\t *\n\t * @param {HTMLElement} element\n\t * @param {string} language\n\t * @returns {void}\n\t */\n\tfunction setLanguageClass(element, language) {\n\t\tvar className = element.className;\n\t\tclassName = className.replace(lang, ' ') + ' language-' + language;\n\t\telement.className = className.replace(/\\s+/g, ' ').trim();\n\t}\n\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tsetLanguageClass(code, language);\n\t\t\tsetLanguageClass(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\txhr.open('GET', src, true);\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (xhr.readyState == 4) {\n\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\t// mark as loaded\n\t\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t\t// highlight code\n\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\t\t\t\t\t\tPrism.highlightElement(code);\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// mark as failed\n\t\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\t\tcode.textContent = FAILURE_MESSAGE(xhr.status, xhr.statusText);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcode.textContent = FAILURE_EMPTY_MESSAGE;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr.send(null);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; element = elements[i++];) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t}\n\n})();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import * as Prism from 'prismjs'\nimport 'prism-themes/themes/prism-atom-dark'\nimport 'nootstrap-ui'\n\nPrism.highlightAll()\n"],"sourceRoot":""}